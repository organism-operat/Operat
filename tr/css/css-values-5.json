{
  "spec": {
    "title": "CSS Values and Units Module Level 5",
    "url": "https://drafts.csswg.org/css-values-5/"
  },
  "properties": [],
  "atrules": [],
  "selectors": [],
  "values": [
    {
      "name": "toggle()",
      "prose": "The toggle() expression allows descendant elements to cycle over a list of values instead of inheriting the same value.",
      "type": "function"
    },
    {
      "name": "<toggle-value>",
      "prose": "where <toggle-value> is any CSS value that is valid where the expression is placed. If any of the values inside are not valid, then the entire toggle() expression is invalid. The toggle() expression may be used as the value of any property, but must be the only component in that property’s value.",
      "type": "type"
    },
    {
      "name": "attr()",
      "prose": "The attr() function substitutes the value of an attribute on an element into a property, similar to how the var() function substitutes a custom property value into a function.",
      "type": "function",
      "value": "attr( <q-name> <attr-type>? , <declaration-value>?)",
      "values": [
        {
          "name": "string",
          "prose": "The substitution value is a CSS string, whose value is the literal value of the attribute. (No CSS parsing or \"cleanup\" of the value is performed.) No value triggers fallback.",
          "type": "value",
          "value": "string"
        },
        {
          "name": "url",
          "prose": "The substitution value is a CSS <url> value, whose url is the literal value of the attribute. (No CSS parsing or \"cleanup\" of the value is performed.) No value triggers fallback.",
          "type": "value",
          "value": "url"
        },
        {
          "name": "ident",
          "prose": "The substitution value is a CSS <custom-ident>, whose value is the literal value of the attribute, with leading and trailing ASCII whitespace stripped. (No CSS parsing of the value is performed.) If the attribute value, after trimming, is the empty string, there is instead no substitution value. If the <custom-ident>’s value is a CSS-wide keyword or default, there is instead no substitution value.",
          "type": "value",
          "value": "ident"
        },
        {
          "name": "color",
          "prose": "Parse a component value from the attribute’s value. If the result is a <hex-color> or a named color ident, the substitution value is that result as a <color>. Otherwise there is no substitution value.",
          "type": "value",
          "value": "color"
        },
        {
          "name": "number",
          "prose": "Parse a component value from the attribute’s value. If the result is a <number-token>, the result is the substitution value. Otherwise, there is no substitution value.",
          "type": "value",
          "value": "number"
        },
        {
          "name": "percentage",
          "prose": "Parse a component value from the attribute’s value. If the result is a <percentage-token>, the result is the substitution value. Otherwise, there is no substitution value.",
          "type": "value",
          "value": "percentage"
        },
        {
          "name": "length",
          "prose": "Parse a component value from the attribute’s value. If the result is a <dimension-token> whose unit matches the given type, the result is the substitution value. Otherwise, there is no substitution value.",
          "type": "value",
          "value": "length"
        },
        {
          "name": "angle",
          "prose": "Parse a component value from the attribute’s value. If the result is a <dimension-token> whose unit matches the given type, the result is the substitution value. Otherwise, there is no substitution value.",
          "type": "value",
          "value": "angle"
        },
        {
          "name": "time",
          "prose": "Parse a component value from the attribute’s value. If the result is a <dimension-token> whose unit matches the given type, the result is the substitution value. Otherwise, there is no substitution value.",
          "type": "value",
          "value": "time"
        },
        {
          "name": "frequency",
          "prose": "Parse a component value from the attribute’s value. If the result is a <dimension-token> whose unit matches the given type, the result is the substitution value. Otherwise, there is no substitution value.",
          "type": "value",
          "value": "frequency"
        },
        {
          "name": "flex",
          "prose": "Parse a component value from the attribute’s value. If the result is a <dimension-token> whose unit matches the given type, the result is the substitution value. Otherwise, there is no substitution value.",
          "type": "value",
          "value": "flex"
        },
        {
          "name": "<dimension-unit>",
          "prose": "Parse a component value from the attribute’s value. If the result is a <number-token>, the substitution value is a dimension with the result’s value, and the given unit. Otherwise, there is no substitution value.",
          "type": "value",
          "value": "<dimension-unit>"
        }
      ]
    },
    {
      "name": "<attr-type>",
      "type": "type",
      "value": "string | url | ident | color | number | percentage | length | angle | time | frequency | flex | <dimension-unit>"
    },
    {
      "name": "<dimension-unit>",
      "prose": "The <dimension-unit> production matches a literal \"%\" character (that is, a <delim-token> with a value of \"%\") or an ident whose value is any of the CSS units for <length>, <angle>, <time>, <frequency>, or <flex> values (such as px or ms).",
      "type": "type"
    },
    {
      "name": "random()",
      "prose": "The random() function is a math function that represents a random value between a minimum and maximum value, drawn from a uniform distribution, optionally limiting the possible values to a step between those limits:",
      "type": "function",
      "value": "random( <random-caching-options>? , <calc-sum>, <calc-sum>, [by <calc-sum>]? );"
    },
    {
      "name": "<random-caching-options>",
      "type": "type",
      "value": "<dashed-ident> || per-element"
    },
    {
      "name": "random-item()",
      "prose": "The random-item() function resolves to a random item from among its list of items.",
      "type": "function",
      "value": "random-item( <random-caching-options> ';' <any-value> [ ';' <any-value> ]* )"
    }
  ]
}
